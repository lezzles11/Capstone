{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lesleycheung/Desktop/current/Work/capstone/src/components/pages/CalendarPage/CalendarPage.js\";\nimport React, { Component, useState } from \"react\";\nimport \"./components/calendar.css\"; // Event Calendar Imports\n\nimport FullCalendar, { formatDate } from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nlet eventGuid = 0;\nlet todayStr = new Date().toISOString().replace(/T.*$/, \"\"); // YYYY-MM-DD of today\n\nconst initialState = [{\n  id: 1,\n  title: \"User Interface\",\n  keyInfo: \"\",\n  tools: \"MDBootstrap, Bootstrap\",\n  description: \"Users will be able to visualize the entire user interface and understand how the user flow works.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2020-12-18\" + \"T12:00:00\",\n  end: \"2020-12-20\" + \"T12:00:00\"\n}, {\n  id: 2,\n  title: \"Tests\",\n  keyInfo: \"\",\n  tools: \"Enzyme, Jest\",\n  description: \"Users will be able to understand how to test react, react-redux, express, and database components.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2020-12-21\" + \"T12:00:00\",\n  end: \"2020-12-23\" + \"T12:00:00\"\n}, {\n  id: 3,\n  title: \"Database\",\n  keyInfo: \"\",\n  tools: \"Knex, Postgres\",\n  description: \"Users will be able to understand how to construct a user flow\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2020-12-24\" + \"T12:00:00\",\n  end: \"2020-12-25\" + \"T12:00:00\"\n}, {\n  id: 4,\n  title: \"API\",\n  keyInfo: \"\",\n  tools: \"Express, Axios\",\n  description: \"Users will be able to see how the routes connect with one another.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2020-12-26\" + \"T12:00:00\",\n  end: \"2020-12-28\" + \"T12:00:00\"\n}, {\n  id: 5,\n  title: \"Redux Store (State management)\",\n  keyInfo: \"\",\n  tools: \"React-Redux, Redux\",\n  description: \"Users will be able to understand how state is passed throughout the application.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2020-12-29\" + \"T12:00:00\",\n  end: \"2020-12-31\" + \"T12:00:00\"\n}, {\n  id: 6,\n  title: \"Authentication\",\n  keyInfo: \"\",\n  tools: \"JWT\",\n  description: \"Users will be able to understand how users are authenticated.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2021-01-01\" + \"T12:00:00\",\n  end: \"2021-01-03\" + \"T12:00:00\"\n}, {\n  id: 7,\n  title: \"Payment\",\n  keyInfo: \"\",\n  tools: \"Stripe\",\n  description: \"Users will be able how to implement payment for their applications.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2021-01-04\" + \"T12:00:00\",\n  end: \"2021-01-06\" + \"T12:00:00\"\n}, {\n  id: 8,\n  title: \"Deployment\",\n  keyInfo: \"\",\n  tools: \"AWS\",\n  description: \"Users will be able to understand how to deploy their applications.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2021-01-07\" + \"T12:00:00\",\n  end: \"2021-01-09\" + \"T12:00:00\"\n}];\n\nfunction createEventId() {\n  return String(eventGuid++);\n}\n\nfunction renderEventContent(eventInfo) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: eventInfo.timeText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      children: eventInfo.event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nfunction renderSidebarEvent(event) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-check\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-check-input\",\n      type: \"checkbox\",\n      value: \"\",\n      id: event.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-check-label\",\n      for: event.id,\n      children: [\" \", formatDate(event.start, {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\"\n      }), \": \", /*#__PURE__*/_jsxDEV(\"i\", {\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n}\n\nclass EventCalendar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      weekendsVisible: true,\n      currentEvents: []\n    };\n\n    this.handleWeekendsToggle = () => {\n      this.setState({\n        weekendsVisible: !this.state.weekendsVisible\n      });\n    };\n\n    this.handleDateSelect = selectInfo => {\n      let title = prompt(\"Please enter a new title for your event\");\n      let calendarApi = selectInfo.view.calendar;\n      calendarApi.unselect(); // clear date selection\n\n      if (title) {\n        calendarApi.addEvent({\n          id: createEventId(),\n          title,\n          start: selectInfo.startStr,\n          end: selectInfo.endStr,\n          allDay: selectInfo.allDay\n        });\n      }\n    };\n\n    this.handleEventClick = clickInfo => {\n      if (alert(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n        clickInfo.event.remove();\n      }\n    };\n\n    this.handleEvents = events => {\n      this.setState({\n        currentEvents: events\n      });\n    };\n  }\n\n  renderSidebar() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"demo-app-sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"demo-app-sidebar-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Current Project: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), \"Fight Procrastination! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 36\n          }, this), \"(\", this.state.currentEvents.length, \" deliverables)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), this.state.currentEvents.map(renderSidebarEvent)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-3\",\n          children: this.renderSidebar()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-9\",\n          children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n            plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n            headerToolbar: {\n              left: \"prev,next today\",\n              center: \"title\",\n              right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n            },\n            initialView: \"dayGridMonth\",\n            editable: true,\n            selectable: true,\n            selectMirror: true,\n            dayMaxEvents: true,\n            weekends: this.state.weekendsVisible,\n            initialEvents: INITIAL_EVENTS // alternatively, use the `events` setting to fetch from a feed\n            ,\n            select: this.handleDateSelect,\n            eventContent: renderEventContent // custom render function\n            ,\n            eventClick: this.handleEventClick,\n            eventsSet: this.handleEvents // called after events are initialized/added/changed/removed\n\n            /* you can update a remote database when these fire:\n            eventAdd={function(){}}\n            eventChange={function(){}}\n            eventRemove={function(){}}\n            */\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Select dates and you will be prompted to create a new event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Drag, drop, and resize events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Click an event to delete it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default class CalendarPage extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"justify-content-center font3\",\n      children: /*#__PURE__*/_jsxDEV(EventCalendar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/lesleycheung/Desktop/current/Work/capstone/src/components/pages/CalendarPage/CalendarPage.js"],"names":["React","Component","useState","FullCalendar","formatDate","dayGridPlugin","timeGridPlugin","interactionPlugin","eventGuid","todayStr","Date","toISOString","replace","initialState","id","title","keyInfo","tools","description","notes","structure","tasks","task","done","start","end","createEventId","String","renderEventContent","eventInfo","timeText","event","renderSidebarEvent","year","month","day","EventCalendar","state","weekendsVisible","currentEvents","handleWeekendsToggle","setState","handleDateSelect","selectInfo","prompt","calendarApi","view","calendar","unselect","addEvent","startStr","endStr","allDay","handleEventClick","clickInfo","alert","remove","handleEvents","events","renderSidebar","length","map","render","left","center","right","INITIAL_EVENTS","CalendarPage"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport \"./components/calendar.css\";\n// Event Calendar Imports\nimport FullCalendar, {\n  formatDate,\n} from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\nlet eventGuid = 0;\nlet todayStr = new Date().toISOString().replace(/T.*$/, \"\"); // YYYY-MM-DD of today\n\nconst initialState = [\n  {\n    id: 1,\n    title: \"User Interface\",\n    keyInfo: \"\",\n    tools: \"MDBootstrap, Bootstrap\",\n    description:\n      \"Users will be able to visualize the entire user interface and understand how the user flow works.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2020-12-18\" + \"T12:00:00\",\n    end: \"2020-12-20\" + \"T12:00:00\",\n  },\n  {\n    id: 2,\n    title: \"Tests\",\n    keyInfo: \"\",\n    tools: \"Enzyme, Jest\",\n    description:\n      \"Users will be able to understand how to test react, react-redux, express, and database components.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2020-12-21\" + \"T12:00:00\",\n    end: \"2020-12-23\" + \"T12:00:00\",\n  },\n  {\n    id: 3,\n    title: \"Database\",\n    keyInfo: \"\",\n    tools: \"Knex, Postgres\",\n    description:\n      \"Users will be able to understand how to construct a user flow\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2020-12-24\" + \"T12:00:00\",\n    end: \"2020-12-25\" + \"T12:00:00\",\n  },\n  {\n    id: 4,\n    title: \"API\",\n    keyInfo: \"\",\n    tools: \"Express, Axios\",\n    description:\n      \"Users will be able to see how the routes connect with one another.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2020-12-26\" + \"T12:00:00\",\n    end: \"2020-12-28\" + \"T12:00:00\",\n  },\n  {\n    id: 5,\n    title: \"Redux Store (State management)\",\n    keyInfo: \"\",\n    tools: \"React-Redux, Redux\",\n    description:\n      \"Users will be able to understand how state is passed throughout the application.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2020-12-29\" + \"T12:00:00\",\n    end: \"2020-12-31\" + \"T12:00:00\",\n  },\n  {\n    id: 6,\n    title: \"Authentication\",\n    keyInfo: \"\",\n    tools: \"JWT\",\n    description:\n      \"Users will be able to understand how users are authenticated.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2021-01-01\" + \"T12:00:00\",\n    end: \"2021-01-03\" + \"T12:00:00\",\n  },\n  {\n    id: 7,\n    title: \"Payment\",\n    keyInfo: \"\",\n    tools: \"Stripe\",\n    description:\n      \"Users will be able how to implement payment for their applications.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2021-01-04\" + \"T12:00:00\",\n    end: \"2021-01-06\" + \"T12:00:00\",\n  },\n  {\n    id: 8,\n    title: \"Deployment\",\n    keyInfo: \"\",\n    tools: \"AWS\",\n    description:\n      \"Users will be able to understand how to deploy their applications.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2021-01-07\" + \"T12:00:00\",\n    end: \"2021-01-09\" + \"T12:00:00\",\n  },\n];\n\nfunction createEventId() {\n  return String(eventGuid++);\n}\nfunction renderEventContent(eventInfo) {\n  return (\n    <>\n      <b>{eventInfo.timeText}</b>\n      <i>{eventInfo.event.title}</i>\n    </>\n  );\n}\n\nfunction renderSidebarEvent(event) {\n  return (\n    <div className=\"form-check\">\n      <input\n        className=\"form-check-input\"\n        type=\"checkbox\"\n        value=\"\"\n        id={event.id}\n      />\n      <label className=\"form-check-label\" for={event.id}>\n        {\" \"}\n        {formatDate(event.start, {\n          year: \"numeric\",\n          month: \"short\",\n          day: \"numeric\",\n        })}\n        : <i>{event.title}</i>\n      </label>\n    </div>\n  );\n}\n\nclass EventCalendar extends React.Component {\n  state = {\n    weekendsVisible: true,\n    currentEvents: [],\n  };\n  renderSidebar() {\n    return (\n      <div className=\"demo-app-sidebar\">\n        <div className=\"demo-app-sidebar-section\">\n          <h2>\n            Current Project: <br />\n            <br />\n            Fight Procrastination! <br />(\n            {this.state.currentEvents.length} deliverables)\n          </h2>\n          <br />\n          {this.state.currentEvents.map(renderSidebarEvent)}\n        </div>\n      </div>\n    );\n  }\n  handleWeekendsToggle = () => {\n    this.setState({\n      weekendsVisible: !this.state.weekendsVisible,\n    });\n  };\n  handleDateSelect = (selectInfo) => {\n    let title = prompt(\n      \"Please enter a new title for your event\"\n    );\n    let calendarApi = selectInfo.view.calendar;\n\n    calendarApi.unselect(); // clear date selection\n\n    if (title) {\n      calendarApi.addEvent({\n        id: createEventId(),\n        title,\n        start: selectInfo.startStr,\n        end: selectInfo.endStr,\n        allDay: selectInfo.allDay,\n      });\n    }\n  };\n  handleEventClick = (clickInfo) => {\n    if (\n      alert(\n        `Are you sure you want to delete the event '${clickInfo.event.title}'`\n      )\n    ) {\n      clickInfo.event.remove();\n    }\n  };\n\n  handleEvents = (events) => {\n    this.setState({\n      currentEvents: events,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-3\">\n            {this.renderSidebar()}\n          </div>\n          <div className=\"col-9\">\n            <FullCalendar\n              plugins={[\n                dayGridPlugin,\n                timeGridPlugin,\n                interactionPlugin,\n              ]}\n              headerToolbar={{\n                left: \"prev,next today\",\n                center: \"title\",\n                right:\n                  \"dayGridMonth,timeGridWeek,timeGridDay\",\n              }}\n              initialView=\"dayGridMonth\"\n              editable={true}\n              selectable={true}\n              selectMirror={true}\n              dayMaxEvents={true}\n              weekends={this.state.weekendsVisible}\n              initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\n              select={this.handleDateSelect}\n              eventContent={renderEventContent} // custom render function\n              eventClick={this.handleEventClick}\n              eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\n              /* you can update a remote database when these fire:\n            eventAdd={function(){}}\n            eventChange={function(){}}\n            eventRemove={function(){}}\n            */\n            />\n          </div>\n        </div>\n        <br />\n        <div className=\"row\">\n          <h2>Instructions</h2>\n        </div>\n        <div className=\"row\">\n          <ul>\n            <li>\n              Select dates and you will be prompted to\n              create a new event\n            </li>\n            <li>Drag, drop, and resize events</li>\n            <li>Click an event to delete it</li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\nexport default class CalendarPage extends React.Component {\n  render() {\n    return (\n      <div className=\"justify-content-center font3\">\n        <EventCalendar />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}