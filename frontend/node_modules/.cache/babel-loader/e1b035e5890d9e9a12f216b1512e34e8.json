{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lesleycheung/Desktop/current/Work/capstone/src/components/pages/CalendarPage/CalendarPage.js\";\nimport React, { Component, useState } from \"react\";\nimport \"./components/calendar.css\"; // Event Calendar Imports\n\nimport FullCalendar, { formatDate } from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nlet eventGuid = 0;\nlet todayStr = new Date().toISOString().replace(/T.*$/, \"\"); // YYYY-MM-DD of today\n\nconst INITIAL_EVENTS = [{\n  id: createEventId(),\n  title: \"All-day event\",\n  start: todayStr\n}, {\n  id: createEventId(),\n  title: \"Timed event\",\n  start: todayStr + \"T12:00:00\"\n}, {\n  id: createEventId(),\n  title: \"Finish the \",\n  start: \"2020-12-21\" + \"T12:00:00\"\n}];\n\nfunction createEventId() {\n  return String(eventGuid++);\n}\n\nfunction renderEventContent(eventInfo) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: eventInfo.timeText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      children: eventInfo.event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nfunction renderSidebarEvent(event) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: formatDate(event.start, {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\"\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      children: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, event.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\nclass EventCalendar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      weekendsVisible: true,\n      currentEvents: []\n    };\n\n    this.handleWeekendsToggle = () => {\n      this.setState({\n        weekendsVisible: !this.state.weekendsVisible\n      });\n    };\n\n    this.handleDateSelect = selectInfo => {\n      let title = prompt(\"Please enter a new title for your event\");\n      let calendarApi = selectInfo.view.calendar;\n      calendarApi.unselect(); // clear date selection\n\n      if (title) {\n        calendarApi.addEvent({\n          id: createEventId(),\n          title,\n          start: selectInfo.startStr,\n          end: selectInfo.endStr,\n          allDay: selectInfo.allDay\n        });\n      }\n    };\n\n    this.handleEventClick = clickInfo => {\n      if (alert(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n        clickInfo.event.remove();\n      }\n    };\n\n    this.handleEvents = events => {\n      this.setState({\n        currentEvents: events\n      });\n    };\n  }\n\n  renderSidebar() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"demo-app-sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"demo-app-sidebar-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"All Events (\", this.state.currentEvents.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.currentEvents.map(renderSidebarEvent)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Select dates and you will be prompted to create a new event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Drag, drop, and resize events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Click an event to delete it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"demo-app\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"demo-app-main\",\n          children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n            plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n            headerToolbar: {\n              left: \"prev,next today\",\n              center: \"title\",\n              right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n            },\n            initialView: \"dayGridMonth\",\n            editable: true,\n            selectable: true,\n            selectMirror: true,\n            dayMaxEvents: true,\n            weekends: this.state.weekendsVisible,\n            initialEvents: INITIAL_EVENTS // alternatively, use the `events` setting to fetch from a feed\n            ,\n            select: this.handleDateSelect,\n            eventContent: renderEventContent // custom render function\n            ,\n            eventClick: this.handleEventClick,\n            eventsSet: this.handleEvents // called after events are initialized/added/changed/removed\n\n            /* you can update a remote database when these fire:\n            eventAdd={function(){}}\n            eventChange={function(){}}\n            eventRemove={function(){}}\n            */\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: this.renderSidebar()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default class CalendarPage extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"justify-content-center font3\",\n      children: /*#__PURE__*/_jsxDEV(EventCalendar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/lesleycheung/Desktop/current/Work/capstone/src/components/pages/CalendarPage/CalendarPage.js"],"names":["React","Component","useState","FullCalendar","formatDate","dayGridPlugin","timeGridPlugin","interactionPlugin","eventGuid","todayStr","Date","toISOString","replace","INITIAL_EVENTS","id","createEventId","title","start","String","renderEventContent","eventInfo","timeText","event","renderSidebarEvent","year","month","day","EventCalendar","state","weekendsVisible","currentEvents","handleWeekendsToggle","setState","handleDateSelect","selectInfo","prompt","calendarApi","view","calendar","unselect","addEvent","startStr","end","endStr","allDay","handleEventClick","clickInfo","alert","remove","handleEvents","events","renderSidebar","length","map","render","left","center","right","CalendarPage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,2BAAP,C,CACA;;AACA,OAAOC,YAAP,IACEC,UADF,QAEO,qBAFP;AAGA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AAEA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,WAAX,GAAyBC,OAAzB,CAAiC,MAAjC,EAAyC,EAAzC,CAAf,C,CAA6D;;AAE7D,MAAMC,cAAc,GAAG,CACrB;AACEC,EAAAA,EAAE,EAAEC,aAAa,EADnB;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,KAAK,EAAER;AAHT,CADqB,EAMrB;AACEK,EAAAA,EAAE,EAAEC,aAAa,EADnB;AAEEC,EAAAA,KAAK,EAAE,aAFT;AAGEC,EAAAA,KAAK,EAAER,QAAQ,GAAG;AAHpB,CANqB,EAWrB;AACEK,EAAAA,EAAE,EAAEC,aAAa,EADnB;AAEEC,EAAAA,KAAK,EAAE,aAFT;AAGEC,EAAAA,KAAK,EAAE,eAAe;AAHxB,CAXqB,CAAvB;;AAkBA,SAASF,aAAT,GAAyB;AACvB,SAAOG,MAAM,CAACV,SAAS,EAAV,CAAb;AACD;;AACD,SAASW,kBAAT,CAA4BC,SAA5B,EAAuC;AACrC,sBACE;AAAA,4BACE;AAAA,gBAAIA,SAAS,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAID,SAAS,CAACE,KAAV,CAAgBN;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;AAED,SAASO,kBAAT,CAA4BD,KAA5B,EAAmC;AACjC,sBACE;AAAA,4BACE;AAAA,gBACGlB,UAAU,CAACkB,KAAK,CAACL,KAAP,EAAc;AACvBO,QAAAA,IAAI,EAAE,SADiB;AAEvBC,QAAAA,KAAK,EAAE,OAFgB;AAGvBC,QAAAA,GAAG,EAAE;AAHkB,OAAd;AADb;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAA,gBAAIJ,KAAK,CAACN;AAAV;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,KAASM,KAAK,CAACR,EAAf;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;AAED,MAAMa,aAAN,SAA4B3B,KAAK,CAACC,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAC1C2B,KAD0C,GAClC;AACNC,MAAAA,eAAe,EAAE,IADX;AAENC,MAAAA,aAAa,EAAE;AAFT,KADkC;;AAAA,SAqB1CC,oBArB0C,GAqBnB,MAAM;AAC3B,WAAKC,QAAL,CAAc;AACZH,QAAAA,eAAe,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADjB,OAAd;AAGD,KAzByC;;AAAA,SA0B1CI,gBA1B0C,GA0BtBC,UAAD,IAAgB;AACjC,UAAIlB,KAAK,GAAGmB,MAAM,CAChB,yCADgB,CAAlB;AAGA,UAAIC,WAAW,GAAGF,UAAU,CAACG,IAAX,CAAgBC,QAAlC;AAEAF,MAAAA,WAAW,CAACG,QAAZ,GANiC,CAMT;;AAExB,UAAIvB,KAAJ,EAAW;AACToB,QAAAA,WAAW,CAACI,QAAZ,CAAqB;AACnB1B,UAAAA,EAAE,EAAEC,aAAa,EADE;AAEnBC,UAAAA,KAFmB;AAGnBC,UAAAA,KAAK,EAAEiB,UAAU,CAACO,QAHC;AAInBC,UAAAA,GAAG,EAAER,UAAU,CAACS,MAJG;AAKnBC,UAAAA,MAAM,EAAEV,UAAU,CAACU;AALA,SAArB;AAOD;AACF,KA3CyC;;AAAA,SA4C1CC,gBA5C0C,GA4CtBC,SAAD,IAAe;AAChC,UACEC,KAAK,CACF,8CAA6CD,SAAS,CAACxB,KAAV,CAAgBN,KAAM,GADjE,CADP,EAIE;AACA8B,QAAAA,SAAS,CAACxB,KAAV,CAAgB0B,MAAhB;AACD;AACF,KApDyC;;AAAA,SAsD1CC,YAtD0C,GAsD1BC,MAAD,IAAY;AACzB,WAAKlB,QAAL,CAAc;AACZF,QAAAA,aAAa,EAAEoB;AADH,OAAd;AAGD,KA1DyC;AAAA;;AAK1CC,EAAAA,aAAa,GAAG;AACd,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA,gCACE;AAAA,qCACe,KAAKvB,KAAL,CAAWE,aAAX,CAAyBsB,MADxC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,oBACG,KAAKxB,KAAL,CAAWE,aAAX,CAAyBuB,GAAzB,CACC9B,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAwCD+B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAcE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE,QAAC,YAAD;AACE,YAAA,OAAO,EAAE,CACPjD,aADO,EAEPC,cAFO,EAGPC,iBAHO,CADX;AAME,YAAA,aAAa,EAAE;AACbgD,cAAAA,IAAI,EAAE,iBADO;AAEbC,cAAAA,MAAM,EAAE,OAFK;AAGbC,cAAAA,KAAK,EACH;AAJW,aANjB;AAYE,YAAA,WAAW,EAAC,cAZd;AAaE,YAAA,QAAQ,EAAE,IAbZ;AAcE,YAAA,UAAU,EAAE,IAdd;AAeE,YAAA,YAAY,EAAE,IAfhB;AAgBE,YAAA,YAAY,EAAE,IAhBhB;AAiBE,YAAA,QAAQ,EAAE,KAAK7B,KAAL,CAAWC,eAjBvB;AAkBE,YAAA,aAAa,EAAEhB,cAlBjB,CAkBiC;AAlBjC;AAmBE,YAAA,MAAM,EAAE,KAAKoB,gBAnBf;AAoBE,YAAA,YAAY,EAAEd,kBApBhB,CAoBoC;AApBpC;AAqBE,YAAA,UAAU,EAAE,KAAK0B,gBArBnB;AAsBE,YAAA,SAAS,EAAE,KAAKI,YAtBlB,CAsBgC;;AAC9B;AACd;AACA;AACA;AACA;;AA3BY;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF,eA+CE;AAAA;AAAA;AAAA;AAAA,cA/CF,eAgDE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBAAsB,KAAKE,aAAL;AAAtB;AAAA;AAAA;AAAA;AAAA,cAhDF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoDD;;AAjHyC;;AAmH5C,eAAe,MAAMO,YAAN,SAA2B1D,KAAK,CAACC,SAAjC,CAA2C;AACxDqD,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA,6BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAPuD","sourcesContent":["import React, { Component, useState } from \"react\";\nimport \"./components/calendar.css\";\n// Event Calendar Imports\nimport FullCalendar, {\n  formatDate,\n} from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n\nlet eventGuid = 0;\nlet todayStr = new Date().toISOString().replace(/T.*$/, \"\"); // YYYY-MM-DD of today\n\nconst INITIAL_EVENTS = [\n  {\n    id: createEventId(),\n    title: \"All-day event\",\n    start: todayStr,\n  },\n  {\n    id: createEventId(),\n    title: \"Timed event\",\n    start: todayStr + \"T12:00:00\",\n  },\n  {\n    id: createEventId(),\n    title: \"Finish the \",\n    start: \"2020-12-21\" + \"T12:00:00\",\n  },\n];\n\nfunction createEventId() {\n  return String(eventGuid++);\n}\nfunction renderEventContent(eventInfo) {\n  return (\n    <>\n      <b>{eventInfo.timeText}</b>\n      <i>{eventInfo.event.title}</i>\n    </>\n  );\n}\n\nfunction renderSidebarEvent(event) {\n  return (\n    <li key={event.id}>\n      <b>\n        {formatDate(event.start, {\n          year: \"numeric\",\n          month: \"short\",\n          day: \"numeric\",\n        })}\n      </b>\n      <i>{event.title}</i>\n    </li>\n  );\n}\n\nclass EventCalendar extends React.Component {\n  state = {\n    weekendsVisible: true,\n    currentEvents: [],\n  };\n  renderSidebar() {\n    return (\n      <div className=\"demo-app-sidebar\">\n        <div className=\"demo-app-sidebar-section\">\n          <h2>\n            All Events ({this.state.currentEvents.length})\n          </h2>\n          <ul>\n            {this.state.currentEvents.map(\n              renderSidebarEvent\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n  handleWeekendsToggle = () => {\n    this.setState({\n      weekendsVisible: !this.state.weekendsVisible,\n    });\n  };\n  handleDateSelect = (selectInfo) => {\n    let title = prompt(\n      \"Please enter a new title for your event\"\n    );\n    let calendarApi = selectInfo.view.calendar;\n\n    calendarApi.unselect(); // clear date selection\n\n    if (title) {\n      calendarApi.addEvent({\n        id: createEventId(),\n        title,\n        start: selectInfo.startStr,\n        end: selectInfo.endStr,\n        allDay: selectInfo.allDay,\n      });\n    }\n  };\n  handleEventClick = (clickInfo) => {\n    if (\n      alert(\n        `Are you sure you want to delete the event '${clickInfo.event.title}'`\n      )\n    ) {\n      clickInfo.event.remove();\n    }\n  };\n\n  handleEvents = (events) => {\n    this.setState({\n      currentEvents: events,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <h2>Instructions</h2>\n        </div>\n        <div className=\"row\">\n          <ul>\n            <li>\n              Select dates and you will be prompted to\n              create a new event\n            </li>\n            <li>Drag, drop, and resize events</li>\n            <li>Click an event to delete it</li>\n          </ul>\n        </div>\n        <div className=\"demo-app\">\n          <div className=\"demo-app-main\">\n            <FullCalendar\n              plugins={[\n                dayGridPlugin,\n                timeGridPlugin,\n                interactionPlugin,\n              ]}\n              headerToolbar={{\n                left: \"prev,next today\",\n                center: \"title\",\n                right:\n                  \"dayGridMonth,timeGridWeek,timeGridDay\",\n              }}\n              initialView=\"dayGridMonth\"\n              editable={true}\n              selectable={true}\n              selectMirror={true}\n              dayMaxEvents={true}\n              weekends={this.state.weekendsVisible}\n              initialEvents={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\n              select={this.handleDateSelect}\n              eventContent={renderEventContent} // custom render function\n              eventClick={this.handleEventClick}\n              eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\n              /* you can update a remote database when these fire:\n            eventAdd={function(){}}\n            eventChange={function(){}}\n            eventRemove={function(){}}\n            */\n            />\n          </div>\n        </div>\n        <br />\n        <div className=\"row\">{this.renderSidebar()}</div>\n      </div>\n    );\n  }\n}\nexport default class CalendarPage extends React.Component {\n  render() {\n    return (\n      <div className=\"justify-content-center font3\">\n        <EventCalendar />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}