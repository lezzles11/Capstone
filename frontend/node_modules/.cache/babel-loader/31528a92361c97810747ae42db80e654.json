{"ast":null,"code":"import { ADD_USER, DELETE_USER, LOGIN_FAILURE, LOGIN_SUCCESS } from \"../actions/types\";\nconst initialState = [{\n  id: 1,\n  name: \"Lesley\",\n  email: \"lesleyc@bu.edu\",\n  password: \"password\"\n}, {\n  id: 2,\n  name: \"Ryan\",\n  email: \"ryan@bu.edu\",\n  password: \"password\"\n}, {\n  id: 3,\n  name: \"Robert\",\n  email: \"robert@bu.edu\",\n  password: \"password\"\n}];\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_USER:\n      return [...state, { ...action.payload,\n        id: generateID(state)\n      }];\n\n    case DELETE_USER:\n      return state.filter(user => user.id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n\nlet generateID = users => {\n  let lastId = 0;\n\n  if (users.length > 0) {\n    lastId = users[users.length - 1].id;\n  }\n\n  return ++lastId;\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/lesleycheung/Desktop/current/Work/capstone/frontend/src/redux/reducers/userReducer.js"],"names":["ADD_USER","DELETE_USER","LOGIN_FAILURE","LOGIN_SUCCESS","initialState","id","name","email","password","userReducer","state","action","type","payload","generateID","filter","user","users","lastId","length"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,aAAhC,EAA+CC,aAA/C,QAAsE,kBAAtE;AAEA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,KAAK,EAAE,gBAHT;AAIEC,EAAAA,QAAQ,EAAE;AAJZ,CADmB,EAOnB;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,KAAK,EAAE,aAHT;AAIEC,EAAAA,QAAQ,EAAE;AAJZ,CAPmB,EAanB;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,KAAK,EAAE,eAHT;AAIEC,EAAAA,QAAQ,EAAE;AAJZ,CAbmB,CAArB;;AAoBA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,QAAL;AACE,aAAO,CACL,GAAGU,KADE,EAEL,EAAE,GAAGC,MAAM,CAACE,OAAZ;AAAqBR,QAAAA,EAAE,EAAES,UAAU,CAACJ,KAAD;AAAnC,OAFK,CAAP;;AAIF,SAAKT,WAAL;AACE,aAAOS,KAAK,CAACK,MAAN,CACJC,IAAD,IAAUA,IAAI,CAACX,EAAL,KAAYM,MAAM,CAACE,OADxB,CAAP;;AAGF;AACE,aAAOH,KAAP;AAXJ;AAaD,CAdD;;AAeA,IAAII,UAAU,GAAIG,KAAD,IAAW;AAC1B,MAAIC,MAAM,GAAG,CAAb;;AACA,MAAID,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AACpBD,IAAAA,MAAM,GAAGD,KAAK,CAACA,KAAK,CAACE,MAAN,GAAe,CAAhB,CAAL,CAAwBd,EAAjC;AACD;;AACD,SAAO,EAAEa,MAAT;AACD,CAND;;AAQA,eAAeT,WAAf","sourcesContent":["import { ADD_USER, DELETE_USER, LOGIN_FAILURE, LOGIN_SUCCESS,  } from \"../actions/types\";\n\nconst initialState = [\n  {\n    id: 1,\n    name: \"Lesley\",\n    email: \"lesleyc@bu.edu\",\n    password: \"password\",\n  },\n  {\n    id: 2,\n    name: \"Ryan\",\n    email: \"ryan@bu.edu\",\n    password: \"password\",\n  },\n  {\n    id: 3,\n    name: \"Robert\",\n    email: \"robert@bu.edu\",\n    password: \"password\",\n  },\n];\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_USER:\n      return [\n        ...state,\n        { ...action.payload, id: generateID(state) },\n      ];\n    case DELETE_USER:\n      return state.filter(\n        (user) => user.id !== action.payload\n      );\n    default:\n      return state;\n  }\n};\nlet generateID = (users) => {\n  let lastId = 0;\n  if (users.length > 0) {\n    lastId = users[users.length - 1].id;\n  }\n  return ++lastId;\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}