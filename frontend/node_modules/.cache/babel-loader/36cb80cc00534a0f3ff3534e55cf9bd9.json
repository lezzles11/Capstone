{"ast":null,"code":"import { ADD_FEATURE, EDIT_FEATURE, DELETE_FEATURE } from \"../actions/types\";\nconst initialState = [{\n  id: 1,\n  title: \"User Interface\",\n  keyInfo: \"\",\n  tools: \"MDBootstrap, Bootstrap\",\n  description: \"Users will be able to visualize the entire user interface and understand how the user flow works.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2020-12-18\" + \"T12:00:00\",\n  end: \"2020-12-20\" + \"T12:00:00\"\n}, {\n  id: 2,\n  title: \"Tests\",\n  keyInfo: \"\",\n  tools: \"Enzyme, Jest\",\n  description: \"Users will be able to understand how to test react, react-redux, express, and database components.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2020-12-21\" + \"T12:00:00\",\n  end: \"2020-12-23\" + \"T12:00:00\"\n}, {\n  id: 3,\n  title: \"Database\",\n  keyInfo: \"\",\n  tools: \"Knex, Postgres\",\n  description: \"Users will be able to understand how to construct a user flow\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2020-12-24\" + \"T12:00:00\",\n  end: \"2020-12-25\" + \"T12:00:00\"\n}, {\n  id: 4,\n  title: \"API\",\n  keyInfo: \"\",\n  tools: \"Express, Axios\",\n  description: \"Users will be able to see how the routes connect with one another.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2020-12-26\" + \"T12:00:00\",\n  end: \"2020-12-28\" + \"T12:00:00\"\n}, {\n  id: 6,\n  title: \"Authentication\",\n  keyInfo: \"\",\n  tools: \"JWT\",\n  description: \"Users will be able to understand how users are authenticated.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2021-01-01\" + \"T12:00:00\",\n  end: \"2021-01-03\" + \"T12:00:00\"\n}, {\n  id: 7,\n  title: \"Payment\",\n  keyInfo: \"\",\n  tools: \"Stripe\",\n  description: \"Users will be able how to implement payment for their applications.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2021-01-04\" + \"T12:00:00\",\n  end: \"2021-01-06\" + \"T12:00:00\"\n}, {\n  id: 8,\n  title: \"Deployment\",\n  keyInfo: \"\",\n  tools: \"AWS\",\n  description: \"Users will be able to understand how to deploy their applications.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2021-01-07\" + \"T12:00:00\",\n  end: \"2021-01-09\" + \"T12:00:00\"\n}];\n\nconst featureReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_FEATURE:\n      return [...state, { ...action.payload,\n        id: generateID(state)\n      }];\n\n    case DELETE_FEATURE:\n      return state.filter(feature => feature.id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n\nlet generateID = orders => {\n  let lastId = 0;\n\n  if (orders.length > 0) {\n    lastId = orders[orders.length - 1].id;\n  }\n\n  return ++lastId;\n};\n\nexport default featureReducer;","map":{"version":3,"sources":["/Users/lesleycheung/Desktop/current/Work/capstone/src/redux/reducers/featureReducer.js"],"names":["ADD_FEATURE","EDIT_FEATURE","DELETE_FEATURE","initialState","id","title","keyInfo","tools","description","notes","structure","tasks","task","done","start","end","featureReducer","state","action","type","payload","generateID","filter","feature","orders","lastId","length"],"mappings":"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","sourcesContent":["import {\n  ADD_FEATURE,\n  EDIT_FEATURE,\n  DELETE_FEATURE,\n} from \"../actions/types\";\n\nconst initialState = [\n  {\n    id: 1,\n    title: \"User Interface\",\n    keyInfo: \"\",\n    tools: \"MDBootstrap, Bootstrap\",\n    description:\n      \"Users will be able to visualize the entire user interface and understand how the user flow works.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2020-12-18\" + \"T12:00:00\",\n    end: \"2020-12-20\" + \"T12:00:00\",\n  },\n  {\n    id: 2,\n    title: \"Tests\",\n    keyInfo: \"\",\n    tools: \"Enzyme, Jest\",\n    description:\n      \"Users will be able to understand how to test react, react-redux, express, and database components.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2020-12-21\" + \"T12:00:00\",\n    end: \"2020-12-23\" + \"T12:00:00\",\n  },\n  {\n    id: 3,\n    title: \"Database\",\n    keyInfo: \"\",\n    tools: \"Knex, Postgres\",\n    description:\n      \"Users will be able to understand how to construct a user flow\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2020-12-24\" + \"T12:00:00\",\n    end: \"2020-12-25\" + \"T12:00:00\",\n  },\n  {\n    id: 4,\n    title: \"API\",\n    keyInfo: \"\",\n    tools: \"Express, Axios\",\n    description:\n      \"Users will be able to see how the routes connect with one another.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2020-12-26\" + \"T12:00:00\",\n    end: \"2020-12-28\" + \"T12:00:00\",\n  },\n \n  {\n    id: 6,\n    title: \"Authentication\",\n    keyInfo: \"\",\n    tools: \"JWT\",\n    description:\n      \"Users will be able to understand how users are authenticated.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2021-01-01\" + \"T12:00:00\",\n    end: \"2021-01-03\" + \"T12:00:00\",\n  },\n  {\n    id: 7,\n    title: \"Payment\",\n    keyInfo: \"\",\n    tools: \"Stripe\",\n    description:\n      \"Users will be able how to implement payment for their applications.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2021-01-04\" + \"T12:00:00\",\n    end: \"2021-01-06\" + \"T12:00:00\",\n  },\n  {\n    id: 8,\n    title: \"Deployment\",\n    keyInfo: \"\",\n    tools: \"AWS\",\n    description:\n      \"Users will be able to understand how to deploy their applications.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2021-01-07\" + \"T12:00:00\",\n    end: \"2021-01-09\" + \"T12:00:00\",\n  },\n];\nconst featureReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_FEATURE:\n      return [\n        ...state,\n        { ...action.payload, id: generateID(state) },\n      ];\n    case DELETE_FEATURE:\n      return state.filter(\n        (feature) => feature.id !== action.payload\n      );\n    default:\n      return state;\n  }\n};\nlet generateID = (orders) => {\n  let lastId = 0;\n  if (orders.length > 0) {\n    lastId = orders[orders.length - 1].id;\n  }\n  return ++lastId;\n};\n\nexport default featureReducer;\n"]},"metadata":{},"sourceType":"module"}