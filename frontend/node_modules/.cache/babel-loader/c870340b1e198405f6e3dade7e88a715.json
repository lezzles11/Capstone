{"ast":null,"code":"import { ADD_PROJECT, EDIT_PROJECT, DELETE_PROJECT } from \"../actions/types\";\nconst initialState = [{\n  id: 1,\n  user_id: 1,\n  name: \"Project Management\",\n  deadline: \"Jan 12, 2021\",\n  purpose: \"The purpose of this project is to \",\n  description: \"This project\",\n  friendOneEmail: \"anubhav@xccelerate.co\",\n  friendTwoEmail: \"samo@xccelerate.co\"\n}, {\n  id: 2,\n  user_id: 1,\n  name: \"UDemy Data Structures\",\n  deadline: \"Feb 12, 2021\",\n  purpose: \"The purpose of this project is to people better problem solve.\",\n  description: \"This project\",\n  friendOneEmail: \"anubhav@xccelerate.co\",\n  friendTwoEmail: \"samo@xccelerate.co\"\n}, {\n  id: 3,\n  user_id: 1,\n  name: \"Finish Videos\",\n  deadline: \"March 12, 2021\",\n  purpose: \"The purpose of this project is to people better problem solve.\",\n  description: \"This project\",\n  friendOneEmail: \"anubhav@xccelerate.co\",\n  friendTwoEmail: \"samo@xccelerate.co\"\n}];\n\nconst projectReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_PROJECT:\n      return [...state, { ...action.payload,\n        id: generateID(state)\n      }];\n\n    case DELETE_PROJECT:\n      return state.filter(project => project.id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n\nlet generateID = projects => {\n  let lastId = 0;\n\n  if (projects.length > 0) {\n    lastId = projects[projects.length - 1].id;\n  }\n\n  return ++lastId;\n};\n\nexport default projectReducer;","map":{"version":3,"sources":["/Users/lesleycheung/Desktop/current/Work/capstone/src/redux/reducers/projectReducer.js"],"names":["ADD_PROJECT","EDIT_PROJECT","DELETE_PROJECT","initialState","id","user_id","name","deadline","purpose","description","friendOneEmail","friendTwoEmail","projectReducer","state","action","type","payload","generateID","filter","project","projects","lastId","length"],"mappings":"AAAA,SACEA,WADF,EAEEC,YAFF,EAGEC,cAHF,QAIO,kBAJP;AAMA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,OAAO,EAAE,CAFX;AAGEC,EAAAA,IAAI,EAAE,oBAHR;AAIEC,EAAAA,QAAQ,EAAE,cAJZ;AAKEC,EAAAA,OAAO,EAAE,oCALX;AAMEC,EAAAA,WAAW,EAAE,cANf;AAOEC,EAAAA,cAAc,EAAE,uBAPlB;AAQEC,EAAAA,cAAc,EAAE;AARlB,CADmB,EAWnB;AACEP,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,OAAO,EAAE,CAFX;AAGEC,EAAAA,IAAI,EAAE,uBAHR;AAIEC,EAAAA,QAAQ,EAAE,cAJZ;AAKEC,EAAAA,OAAO,EACL,gEANJ;AAOEC,EAAAA,WAAW,EAAE,cAPf;AAQEC,EAAAA,cAAc,EAAE,uBARlB;AASEC,EAAAA,cAAc,EAAE;AATlB,CAXmB,EAsBnB;AACEP,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,OAAO,EAAE,CAFX;AAGEC,EAAAA,IAAI,EAAE,eAHR;AAIEC,EAAAA,QAAQ,EAAE,gBAJZ;AAKEC,EAAAA,OAAO,EACL,gEANJ;AAOEC,EAAAA,WAAW,EAAE,cAPf;AAQEC,EAAAA,cAAc,EAAE,uBARlB;AASEC,EAAAA,cAAc,EAAE;AATlB,CAtBmB,CAArB;;AAmCA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,WAAL;AACE,aAAO,CACL,GAAGa,KADE,EAEL,EAAE,GAAGC,MAAM,CAACE,OAAZ;AAAqBZ,QAAAA,EAAE,EAAEa,UAAU,CAACJ,KAAD;AAAnC,OAFK,CAAP;;AAIF,SAAKX,cAAL;AACE,aAAOW,KAAK,CAACK,MAAN,CACJC,OAAD,IAAaA,OAAO,CAACf,EAAR,KAAeU,MAAM,CAACE,OAD9B,CAAP;;AAGF;AACE,aAAOH,KAAP;AAXJ;AAaD,CAdD;;AAeA,IAAII,UAAU,GAAIG,QAAD,IAAc;AAC7B,MAAIC,MAAM,GAAG,CAAb;;AACA,MAAID,QAAQ,CAACE,MAAT,GAAkB,CAAtB,EAAyB;AACvBD,IAAAA,MAAM,GAAGD,QAAQ,CAACA,QAAQ,CAACE,MAAT,GAAkB,CAAnB,CAAR,CAA8BlB,EAAvC;AACD;;AACD,SAAO,EAAEiB,MAAT;AACD,CAND;;AAQA,eAAeT,cAAf","sourcesContent":["import {\n  ADD_PROJECT,\n  EDIT_PROJECT,\n  DELETE_PROJECT,\n} from \"../actions/types\";\n\nconst initialState = [\n  {\n    id: 1,\n    user_id: 1,\n    name: \"Project Management\",\n    deadline: \"Jan 12, 2021\",\n    purpose: \"The purpose of this project is to \",\n    description: \"This project\",\n    friendOneEmail: \"anubhav@xccelerate.co\",\n    friendTwoEmail: \"samo@xccelerate.co\",\n  },\n  {\n    id: 2,\n    user_id: 1,\n    name: \"UDemy Data Structures\",\n    deadline: \"Feb 12, 2021\",\n    purpose:\n      \"The purpose of this project is to people better problem solve.\",\n    description: \"This project\",\n    friendOneEmail: \"anubhav@xccelerate.co\",\n    friendTwoEmail: \"samo@xccelerate.co\",\n  },\n  {\n    id: 3,\n    user_id: 1,\n    name: \"Finish Videos\",\n    deadline: \"March 12, 2021\",\n    purpose:\n      \"The purpose of this project is to people better problem solve.\",\n    description: \"This project\",\n    friendOneEmail: \"anubhav@xccelerate.co\",\n    friendTwoEmail: \"samo@xccelerate.co\",\n  },\n];\n\nconst projectReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_PROJECT:\n      return [\n        ...state,\n        { ...action.payload, id: generateID(state) },\n      ];\n    case DELETE_PROJECT:\n      return state.filter(\n        (project) => project.id !== action.payload\n      );\n    default:\n      return state;\n  }\n};\nlet generateID = (projects) => {\n  let lastId = 0;\n  if (projects.length > 0) {\n    lastId = projects[projects.length - 1].id;\n  }\n  return ++lastId;\n};\n\nexport default projectReducer;\n"]},"metadata":{},"sourceType":"module"}