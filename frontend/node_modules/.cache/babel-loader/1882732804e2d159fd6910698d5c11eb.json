{"ast":null,"code":"import { ADD_USER, DELETE_USER, LOGIN_FAILURE, LOGIN_SUCCESS, USER_DETAIL, LOGOUT_SUCCESS } from \"./types\";\nexport const addUser = user => ({\n  type: ADD_USER,\n  payload: user\n});\nexport const deleteUser = id => ({\n  type: DELETE_USER,\n  payload: id\n});\nexport const loginSuccess = () => ({\n  type: LOGIN_SUCCESS\n});\nexport const loginFailure = message => ({\n  type: LOGIN_FAILURE,\n  message: message\n});\nexport const getUserDetail = data => ({\n  type: USER_DETAIL,\n  info: data\n});\nexport const logoutSuccess = () => ({\n  type: LOGOUT_SUCCESS\n});\n/**********************************************\n * Get User Information\n * ==================================\n * Input:\n * Output:\n *  1. getUserDetail\n *      - Get data, and passing in the bearer and local storage token\n *      - Then, if there is no response \n ***********************************************/\n\nexport function getUserInfoThunk() {\n  return dispatch => {\n    return axios.get(`${process.env.REACT_APP_API_SERVER}/api/data`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(response => {\n      if (response.data == null) {\n        console.log(\"failure\");\n      } else {\n        dispatch(getUserDetail(response.data));\n      }\n    }).catch(error => {\n      console.log(\"Error: \", error);\n    });\n  };\n}\n/**********************************************\n * Login User Thunk\n * ==================================\n * Input: email, password\n * Output:\n *  1. loginFailure\n *\n *  2. loginSuccess (set token as local storage)\n ***********************************************/\n\nexport function loginUserThunk(email, password) {\n  return dispatch => {\n    return axios.post(`${process.env.REACT_APP_API_SERVER}/api/login`, {\n      email: email,\n      password: password\n    }).then(response => {\n      if (response.data == null) {\n        dispatch(loginFailure(\"Didn't get any data back\"));\n      } else if (!response.data.token) {\n        dispatch(loginFailure(\"Didn't get any token\"));\n      } else {\n        localStorage.setItem(\"token\", response.data.token);\n        dispatch(loginSuccess());\n      }\n    }).catch(error => {\n      console.log(\"Error: \", error);\n    });\n  };\n}\n/**********************************************\n * Logout Thunk\n * ==================================\n * Input:\n * Output:\n ***********************************************/\n\nexport function logoutThunk() {\n  return dispatch => {\n    localStorage.removeItem(\"token\");\n    dispatch(logoutSuccess());\n  };\n}","map":{"version":3,"sources":["/Users/lesleycheung/Desktop/current/Work/capstone/frontend/src/redux/actions/userActions.js"],"names":["ADD_USER","DELETE_USER","LOGIN_FAILURE","LOGIN_SUCCESS","USER_DETAIL","LOGOUT_SUCCESS","addUser","user","type","payload","deleteUser","id","loginSuccess","loginFailure","message","getUserDetail","data","info","logoutSuccess","getUserInfoThunk","dispatch","axios","get","process","env","REACT_APP_API_SERVER","headers","Authorization","localStorage","getItem","then","response","console","log","catch","error","loginUserThunk","email","password","post","token","setItem","logoutThunk","removeItem"],"mappings":"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","sourcesContent":["import {\n  ADD_USER,\n  DELETE_USER,\n  LOGIN_FAILURE,\n  LOGIN_SUCCESS,\n  USER_DETAIL,\n  LOGOUT_SUCCESS,\n} from \"./types\";\n\nexport const addUser = (user) => ({\n  type: ADD_USER,\n  payload: user,\n});\n\nexport const deleteUser = (id) => ({\n  type: DELETE_USER,\n  payload: id,\n});\n\nexport const loginSuccess = () => ({\n  type: LOGIN_SUCCESS,\n});\n\nexport const loginFailure = (message) => ({\n  type: LOGIN_FAILURE,\n  message: message,\n});\n\nexport const getUserDetail = (data) => ({\n  type: USER_DETAIL,\n  info: data,\n});\n\nexport const logoutSuccess = () => ({\n  type: LOGOUT_SUCCESS,\n});\n/**********************************************\n * Get User Information\n * ==================================\n * Input:\n * Output:\n *  1. getUserDetail\n *      - Get data, and passing in the bearer and local storage token\n *      - Then, if there is no response \n ***********************************************/\nexport function getUserInfoThunk() {\n  return (dispatch) => {\n    return axios\n      .get(`${process.env.REACT_APP_API_SERVER}/api/data`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\n            \"token\"\n          )}`,\n        },\n      })\n      .then((response) => {\n        if (response.data == null) {\n          console.log(\"failure\");\n        } else {\n          dispatch(getUserDetail(response.data));\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error: \", error);\n      });\n  };\n}\n\n/**********************************************\n * Login User Thunk\n * ==================================\n * Input: email, password\n * Output:\n *  1. loginFailure\n *\n *  2. loginSuccess (set token as local storage)\n ***********************************************/\nexport function loginUserThunk(email, password) {\n  return (dispatch) => {\n    return axios\n      .post(\n        `${process.env.REACT_APP_API_SERVER}/api/login`,\n        {\n          email: email,\n          password: password,\n        }\n      )\n      .then((response) => {\n        if (response.data == null) {\n          dispatch(\n            loginFailure(\"Didn't get any data back\")\n          );\n        } else if (!response.data.token) {\n          dispatch(loginFailure(\"Didn't get any token\"));\n        } else {\n          localStorage.setItem(\n            \"token\",\n            response.data.token\n          );\n          dispatch(loginSuccess());\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error: \", error);\n      });\n  };\n}\n\n/**********************************************\n * Logout Thunk\n * ==================================\n * Input:\n * Output:\n ***********************************************/\n\nexport function logoutThunk() {\n  return (dispatch) => {\n    localStorage.removeItem(\"token\");\n    dispatch(logoutSuccess());\n  };\n}\n"]},"metadata":{},"sourceType":"module"}