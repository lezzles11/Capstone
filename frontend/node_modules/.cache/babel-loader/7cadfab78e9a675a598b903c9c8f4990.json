{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lesleycheung/Desktop/current/Work/capstone/src/components/pages/ProjectPage/components/DeliverableTimeline.js\";\nimport React, { Component } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Steps, Popover } from \"antd\";\nimport { connect } from \"react-redux\";\nconst {\n  Step\n} = Steps;\n/**********************************************\n * Deliverable Timeline\n * ==================================\n * This would receive an array of deliverables\n * deliverable is an object that contains\n *\n ***********************************************/\n\nconst customDot = (dot, {\n  status,\n  index\n}) => /*#__PURE__*/_jsxDEV(Popover, {\n  content: /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [\"step \", index, \" status: \", status]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this),\n  children: dot\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n\nconst initialState = [{\n  id: 1,\n  title: \"User Interface\",\n  keyInfo: \"\",\n  tools: \"MDBootstrap, Bootstrap\",\n  description: \"Users will be able to visualize the entire user interface and understand how the user flow works.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2020-12-18\" + \"T12:00:00\",\n  end: \"2020-12-20\" + \"T12:00:00\"\n}, {\n  id: 2,\n  title: \"Tests\",\n  keyInfo: \"\",\n  tools: \"Enzyme, Jest\",\n  description: \"Users will be able to understand how to test react, react-redux, express, and database components.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2020-12-21\" + \"T12:00:00\",\n  end: \"2020-12-23\" + \"T12:00:00\"\n}, {\n  id: 3,\n  title: \"Database\",\n  keyInfo: \"\",\n  tools: \"Knex, Postgres\",\n  description: \"Users will be able to understand how to construct a user flow\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2020-12-24\" + \"T12:00:00\",\n  end: \"2020-12-25\" + \"T12:00:00\"\n}, {\n  id: 4,\n  title: \"API\",\n  keyInfo: \"\",\n  tools: \"Express, Axios\",\n  description: \"Users will be able to see how the routes connect with one another.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2020-12-26\" + \"T12:00:00\",\n  end: \"2020-12-28\" + \"T12:00:00\"\n}, {\n  id: 5,\n  title: \"Redux Store (State management)\",\n  keyInfo: \"\",\n  tools: \"React-Redux, Redux\",\n  description: \"Users will be able to understand how state is passed throughout the application.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2020-12-29\" + \"T12:00:00\",\n  end: \"2020-12-31\" + \"T12:00:00\"\n}, {\n  id: 6,\n  title: \"Authentication\",\n  keyInfo: \"\",\n  tools: \"JWT\",\n  description: \"Users will be able to understand how users are authenticated.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2021-01-01\" + \"T12:00:00\",\n  end: \"2021-01-03\" + \"T12:00:00\"\n}, {\n  id: 7,\n  title: \"Payment\",\n  keyInfo: \"\",\n  tools: \"Stripe\",\n  description: \"Users will be able how to implement payment for their applications.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2021-01-04\" + \"T12:00:00\",\n  end: \"2021-01-06\" + \"T12:00:00\"\n}, {\n  id: 8,\n  title: \"Deployment\",\n  keyInfo: \"\",\n  tools: \"AWS\",\n  description: \"Users will be able to understand how to deploy their applications.\",\n  notes: \"\",\n  structure: \"\",\n  tasks: [{\n    id: 1,\n    task: \"Finish the signup page\",\n    done: true\n  }, {\n    id: 2,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 3,\n    task: \"Finish the calendar page\",\n    done: true\n  }, {\n    id: 4,\n    task: \"Finish the ongoing projects page\",\n    done: true\n  }],\n  start: \"2021-01-07\" + \"T12:00:00\",\n  end: \"2021-01-09\" + \"T12:00:00\"\n}];\nexport default class DeliverableTimeline extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.loadFeatures = features => {\n      let list = [];\n\n      for (let i = 0; i < features.length; i++) {\n        console.log(features[i]);\n        list.push( /*#__PURE__*/_jsxDEV(Step, {\n          title: features[i].title,\n          description: features[i].tools\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 9\n        }, this));\n      }\n\n      return list;\n    };\n  }\n\n  render() {\n    let features = this.props.features;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Timeline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Steps, {\n          current: 0,\n          progressDot: customDot,\n          children: [this.loadFeatures(features), /*#__PURE__*/_jsxDEV(Step, {\n            title: \"Finish user interface\",\n            description: \"MDBootstrap, Bootstrap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Step, {\n            title: \"Finish writing tests\",\n            description: \"Enzyme, Jest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  features: state.features\n});\n\n{\n  /* return (\n    <div className=\"container\">\n      <br />\n      <h5>Timeline</h5>\n      <br />\n      <Steps current={0} progressDot={customDot}>\n        <Step\n          title=\"Finish user interface\"\n          description=\"MDBootstrap, Bootstrap\"\n        />\n        <Step\n          title=\"Finish writing tests\"\n          description=\"Enzyme, Jest\"\n        />\n        <Step\n          title=\"Finish database\"\n          description=\"Knex, Postgres\"\n        />\n        <Step\n          title=\"Finish API\"\n          description=\"Express, Axios\"\n        />\n        <Step\n          title=\"Finish Redux\"\n          description=\"React-Redux, Redux\"\n        />\n        <Step\n          title=\"Finish Authentication\"\n          description=\"JWT\"\n        />\n        <Step title=\"Finish Payment\" description=\"Stripe\" />\n        <Step title=\"Deployment\" description=\"AWS\" />\n      </Steps>\n       <br />\n      <br />\n    </div>\n  );\n  } */\n}","map":{"version":3,"sources":["/Users/lesleycheung/Desktop/current/Work/capstone/src/components/pages/ProjectPage/components/DeliverableTimeline.js"],"names":["React","Component","Steps","Popover","connect","Step","customDot","dot","status","index","initialState","id","title","keyInfo","tools","description","notes","structure","tasks","task","done","start","end","DeliverableTimeline","loadFeatures","features","list","i","length","console","log","push","render","props","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Steps, Popover } from \"antd\";\nimport { connect } from \"react-redux\";\nconst { Step } = Steps;\n\n/**********************************************\n * Deliverable Timeline\n * ==================================\n * This would receive an array of deliverables\n * deliverable is an object that contains\n *\n ***********************************************/\n\nconst customDot = (dot, { status, index }) => (\n  <Popover\n    content={\n      <span>\n        step {index} status: {status}\n      </span>\n    }\n  >\n    {dot}\n  </Popover>\n);\n\nconst initialState = [\n  {\n    id: 1,\n    title: \"User Interface\",\n    keyInfo: \"\",\n    tools: \"MDBootstrap, Bootstrap\",\n    description:\n      \"Users will be able to visualize the entire user interface and understand how the user flow works.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2020-12-18\" + \"T12:00:00\",\n    end: \"2020-12-20\" + \"T12:00:00\",\n  },\n  {\n    id: 2,\n    title: \"Tests\",\n    keyInfo: \"\",\n    tools: \"Enzyme, Jest\",\n    description:\n      \"Users will be able to understand how to test react, react-redux, express, and database components.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2020-12-21\" + \"T12:00:00\",\n    end: \"2020-12-23\" + \"T12:00:00\",\n  },\n  {\n    id: 3,\n    title: \"Database\",\n    keyInfo: \"\",\n    tools: \"Knex, Postgres\",\n    description:\n      \"Users will be able to understand how to construct a user flow\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2020-12-24\" + \"T12:00:00\",\n    end: \"2020-12-25\" + \"T12:00:00\",\n  },\n  {\n    id: 4,\n    title: \"API\",\n    keyInfo: \"\",\n    tools: \"Express, Axios\",\n    description:\n      \"Users will be able to see how the routes connect with one another.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2020-12-26\" + \"T12:00:00\",\n    end: \"2020-12-28\" + \"T12:00:00\",\n  },\n  {\n    id: 5,\n    title: \"Redux Store (State management)\",\n    keyInfo: \"\",\n    tools: \"React-Redux, Redux\",\n    description:\n      \"Users will be able to understand how state is passed throughout the application.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2020-12-29\" + \"T12:00:00\",\n    end: \"2020-12-31\" + \"T12:00:00\",\n  },\n  {\n    id: 6,\n    title: \"Authentication\",\n    keyInfo: \"\",\n    tools: \"JWT\",\n    description:\n      \"Users will be able to understand how users are authenticated.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2021-01-01\" + \"T12:00:00\",\n    end: \"2021-01-03\" + \"T12:00:00\",\n  },\n  {\n    id: 7,\n    title: \"Payment\",\n    keyInfo: \"\",\n    tools: \"Stripe\",\n    description:\n      \"Users will be able how to implement payment for their applications.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2021-01-04\" + \"T12:00:00\",\n    end: \"2021-01-06\" + \"T12:00:00\",\n  },\n  {\n    id: 8,\n    title: \"Deployment\",\n    keyInfo: \"\",\n    tools: \"AWS\",\n    description:\n      \"Users will be able to understand how to deploy their applications.\",\n    notes: \"\",\n    structure: \"\",\n    tasks: [\n      {\n        id: 1,\n        task: \"Finish the signup page\",\n        done: true,\n      },\n      {\n        id: 2,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 3,\n        task: \"Finish the calendar page\",\n        done: true,\n      },\n      {\n        id: 4,\n        task: \"Finish the ongoing projects page\",\n        done: true,\n      },\n    ],\n    start: \"2021-01-07\" + \"T12:00:00\",\n    end: \"2021-01-09\" + \"T12:00:00\",\n  },\n];\nexport default class DeliverableTimeline extends Component {\n  loadFeatures = (features) => {\n    let list = [];\n    for (let i = 0; i < features.length; i++) {\n      console.log(features[i]);\n      list.push(\n        <Step\n          title={features[i].title}\n          description={features[i].tools}\n        />\n      );\n    }\n    return list;\n  };\n  render() {\n    let features = this.props.features;\n    return (\n      <div>\n        <div className=\"container\">\n          <br />\n          <h5>Timeline</h5>\n          <Steps current={0} progressDot={customDot}>\n            {this.loadFeatures(features)}\n            <Step\n              title=\"Finish user interface\"\n              description=\"MDBootstrap, Bootstrap\"\n            />{\" \"}\n            <Step\n              title=\"Finish writing tests\"\n              description=\"Enzyme, Jest\"\n            />\n          </Steps>\n          <br />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  features: state.features,\n});\n{\n  /* return (\n    <div className=\"container\">\n      <br />\n      <h5>Timeline</h5>\n      <br />\n      <Steps current={0} progressDot={customDot}>\n        <Step\n          title=\"Finish user interface\"\n          description=\"MDBootstrap, Bootstrap\"\n        />\n        <Step\n          title=\"Finish writing tests\"\n          description=\"Enzyme, Jest\"\n        />\n        <Step\n          title=\"Finish database\"\n          description=\"Knex, Postgres\"\n        />\n        <Step\n          title=\"Finish API\"\n          description=\"Express, Axios\"\n        />\n        <Step\n          title=\"Finish Redux\"\n          description=\"React-Redux, Redux\"\n        />\n        <Step\n          title=\"Finish Authentication\"\n          description=\"JWT\"\n        />\n        <Step title=\"Finish Payment\" description=\"Stripe\" />\n        <Step title=\"Deployment\" description=\"AWS\" />\n      </Steps>\n\n      <br />\n      <br />\n    </div>\n  );\n} */\n}\n"]},"metadata":{},"sourceType":"module"}